1. Initializing a Repository
------------------------------------
What happens when you initialize a repository? Why do you need to do it?
Now that you’ve initialized your first repository:
git init
(kommt .git Datei)
Aber das kreiiert Commit nicht: wir haben immer noch 0 commits, wenn wir:
git log
machen, dann kommt ein Fehler:
fatal: your current branch 'master' does not have any commits yet
---------------------------------
Man kann auch status abfragen:
git status
Darauf kommt die Antwort:
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

  .DS_Store
  lesson_1_reflections.txt
  lesson_2_reflections.txt

nothing added to commit but untracked files present (use "git add" to track)

Creating and Modifying a Repository
------------------------------------
Concept Map: init, add, staging area and working directory

We’ve introduced a few new concepts since we last revisited our concept map.

    git init
    git add lesson_1_reflections.txt (tut the file to Staging area)
    git status (zeigt danach:
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

  new file:   lesson_1_reflections.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

  .DS_Store
    )

    git reset lesson_1_reflections.txt (entfernt aus Staging area)

    How is the staging area different from the working directory and the repository? What value do you think it offers?
    ------------------------------------------------------------------------------------------------------------------
    Differance between working directory and staging area is:
    - st. area consist only of the files that to be saved in repository and not all files.

    Differance between repository and staging area is:
    - staging area is like container with files that habe to be saved in repository
    - repository saved the files multiple time according to version, with timestamps

    How to write a commit message
    ------------------------------
    You can also specify a commit message via the command line by running git commit -m "Commit message" instead of just git commit. It's still a good idea to get an editor set up, since this will make it easier to write long commit messages that fully describe the change.

    

