When would you want to use a remote repository rather than keeping all your work local?
-------------------------------------------------------------------------------------

    I would prefer to work in remote mode, when:
    - if I work in cooperation with other programmers,
    - if I work on business trip with a notebook and not with local PC.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
---------------------------------------------------------------------

    Because some changes are experemintal and just a trial. I want to deside by myselfe to public or not my changes.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?
----------------------------------------------------------------------------------------------------

    When you say you are Forking a repository you are basically creating a copy of the repository under your GitHub ID. Forked project is on our online repository. 
    The Fork & Pull Model lets anyone fork an existing repository and push changes to their personal fork without requiring access be granted to the source repository. 
    The source repository will not get my commits, because I don't have permission to change Larry's repository! The changes must then be pulled into the source repository by the project maintainer.

	A clone is where you have proper duplication, and separation between, two (possibly different) versions of a repository. After forking we can clone the forked repository locally on our machine.
	Clone can be done local as copy of the same project/repository or per remote from server.

	Branches are working in a single repository.

Local copies of remote branches

Now that you've seen how to update your local copy of remote branches, and how to combine conflicting changes from multiple people, add the following question and your thoughts on it to your reflections file:

What is the benefit of having a copy of the last known state of the remote (Github)
stored locally?
----------------------------------------------------

    It gives us a possibility to go back to origin state, see and analysed last changes. 

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?
------------------------------------------------------

    Harder will be:
     it will be more difficult to communicate, achive people and exchange changes between programmers, because you can't see changes in files so nice as in Github.
     More simply will be:
     --------------------
     If to people are on one desk, it is sometimes to understand complex changes and you can get additional explanation of codes..

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?
------------------------------------------------------------
    Fill in your answer here
